name: Push to GCR GitHub Action
on:
  workflow_call:
    inputs:
      context:
        description: The path to the docker context in the repository
        required: false
        default: "."
        type: string
      file:
        description: The path to the Dockerfile in the repository
        required: false
        default: "./Dockerfile"
        type: string
      dependencyLocation:
        description: The location of the dependency in Google Cloud Storage
        required: true
        type: string
      dependencyDestination:
        description: The destination filename of the downloaded dependency
        required: true
        type: string
      repository:
        description: The image repository to push to
        required: true
        type: string
    secrets:
      GCLOUD_SERVICE_ACCOUNT:
        description: Service account email with push access to GCR
        required: true
      GCLOUD_SERVICE_KEY:
        description: Service account JSON with push access to GCR
        required: true

jobs:
  build-and-push-to-gcr-with-dependency:
    runs-on: ubuntu-latest
    steps:
      - name: Notify slack success
        if: success()
        id: slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: github-actions
          status: STARTED
          color: warning
      - uses: actions/checkout@v2
      - name: Get the ref name
        id: get_ref_name
        run: |
          if [$GITHUB_REF_NAME == 'tag']
          then
              echo ::set-output name=GIT_REF_NAME::${GITHUB_REF/refs\/tags\//}
          else
              echo ::set-output name=GIT_REF_NAME::${GITHUB_REF/refs\/heads\//}
          fi
      - uses: google-github-actions/auth@v0
        with:
          service_account: "${{ secrets.GCLOUD_SERVICE_ACCOUNT }}"
          credentials_json: "${{ secrets.GCLOUD_SERVICE_KEY }}"
      - uses: google-github-actions/setup-gcloud@v0
      - name: download dependency
        run: |
          gsutil -m cp ${{ inputs.dependencyLocation }} ${{ inputs.dependencyDestination }}
      - name: authenticate to GCR
        run: gcloud auth configure-docker
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "${{ inputs.context }}"
          file: "${{ inputs.file }}"
          push: true
          tags: ${{ inputs.repository }}:${{ steps.get_ref_name.outputs.GIT_REF_NAME }}
      - name: Notify slack success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          # Updates existing message from the first step
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: github-actions
          status: SUCCESS
          color: good
      - name: Notify slack failure
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          # Updates existing message from the first step
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: github-actions
          status: FAILED
          color: danger
